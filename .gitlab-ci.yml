# Copyright (c) 2020-2021 Advanced Robotics at the University of Washington <robomstr@uw.edu>
#
# This file is part of aruwlib.
#
# aruwlib is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# aruwlib is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with aruwlib.  If not, see <https://www.gnu.org/licenses/>.

default:
  image: aruw/mcb-2020-gitlab-ci:2021-06-02.1

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  NUM_JOBS: 4

.default_only: &default_only
  - merge_requests
  - master
  - develop
  - schedules

.verification_only: &verification_only
  - merge_requests
  - master
  - develop

.verification_except: &verification_except
  - schedules 

stages:
  - Initial Verification
  - Build all Targets
  - Deploy Pages

before_script:
  - python -V # Print out python version for debugging

# Initial verification

clang-format:
  stage: Initial Verification
  script:
    - python3 /run-clang-format.py --clang-format-executable clang-format-10 -r src/ test/
  only: *verification_only
  except: *verification_except

policy checks:
  stage: Initial Verification
  script:
    - python3 ./scripts/check_singleton_drivers.py src
    - python3 ./scripts/check_license_headers.py
  variables:
    GIT_SUBMODULE_STRATEGY: none
  only: *verification_only
  except: *verification_except

mcb build:
  stage: Build all Targets
  only: *default_only
  script:
    - cd test-project && lbuild build
    - python3 $(which scons) build -j${NUM_JOBS} additional-ccflags=-Werror

sim build:
  stage: Build all Targets
  only: *default_only
  script:
    - cd test-project && lbuild build
    - python3 $(which scons) build-sim profile=fast -j${NUM_JOBS}

tests build:
  stage: Build all Targets
  only: *default_only
  script:
    - cd test-project && lbuild build
    - python3 $(which scons) run-tests-gcov profile=fast -j${NUM_JOBS}
    - valgrind --leak-check=full --error-exitcode=1 --show-leak-kinds=all build/tests/fast/mcb-project-tests.elf
    - cd .. && gcovr -g --xml > cobertura.xml
    - 'sed -i "s=<source>.</source>=<source>./aruwlib-project-sim</source>=g" cobertura.xml'
    - 'sed -i "s;filename=\";filename=\"aruwlib-project-sim/;g" cobertura.xml'
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-tests"
    reports:
      cobertura: cobertura.xml

# Pages deploy

pages:
  image: alpine
  stage: Deploy Pages
  variables:
    GIT_SUBMODULE_STRATEGY: none
  before_script:
    - apk update
    - apk add py-pip python3-dev
    - apk add make
    - apk add --no-cache g++ gcc libxml2-dev libxslt-dev
    - pip3 install lxml
    - pip3 install sphinx breathe exhale
    - pip install sphinx_rtd_theme
    - apk add doxygen
  script:
    - cd docs && make html
    - mv _build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - develop
  except:
    - schedules
