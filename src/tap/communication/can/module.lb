# Copyright (c) 2020-2021 Advanced Robotics at the University of Washington <robomstr@uw.edu>
#
# This file is part of Taproot.
#
# Taproot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Taproot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Taproot.  If not, see <https://www.gnu.org/licenses/>.

import sys
sys.path.append(repopath("scripts/lbuild-helpers"))
import board_info_parser

def init(module):
    module.name = ":communication:can"
    module.description = "CAN I/O interface wrappers"

def prepare(module, options):
    return True

def build(env):
    metadata = board_info_parser.parse_board_info(env[":dev_board"])

    can_pins = metadata.find("can-pins")
    can_pins = { pin.get("alias"): pin.get("name") for pin in can_pins }

    env.substitutions = {
        "can_pins": can_pins,
    }

    env.outbasepath = "taproot/src/tap/communication/can"
    env.copy("can_bus.hpp")
    env.copy("can_rx_handler.cpp")
    env.copy("can_rx_handler.hpp")
    env.copy("can_rx_listener.cpp")
    env.copy("can_rx_listener.hpp")
    env.copy("can.hpp")
    env.template("can.cpp.in", "can.cpp")
